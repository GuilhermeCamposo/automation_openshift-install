- name: Download Installer
  import_tasks: install-installer.yml

- name: Generate install_config.yaml
  import_tasks: generate-install-config.yml

- name: Create openshift-install manifests
  include_tasks: create-manifests.yml

- name: Installation and getting the logs
  tags:
  - run_installer
  block:

  - name: Run the installer
    become: false
    command: openshift-install create cluster --dir=/home/{{ ansible_user }}/{{ cluster_name }}
    async: "{{ 2 * 60 * 60 }}"
    poll: "{{ 15 }}"
    register: r_openshift_install

  rescue:
  - name: Run destroy to reset before retry
    become: false
    command: openshift-install destroy cluster --dir=/home/{{ ansible_user }}/{{ cluster_name }}

  - name: Pause briefly for cloud provider cleanup to finish
    pause:
      minutes: 2

  - name: Restore install config from backup copy
    copy:
      remote_src: true
      src: /home/{{ ansible_user }}/{{ cluster_name }}/install-config.yaml.bak
      dest: /home/{{ ansible_user }}/{{ cluster_name }}/install-config.yaml
      owner: "{{ ansible_user }}"
      mode: ug=rw,o=

  - name: Recreate openshift-install manifests
    include_tasks: create-manifests.yml

  - name: Retry the installer
    become: false
    command: openshift-install create cluster --dir=/home/{{ ansible_user }}/{{ cluster_name }}
    async: "{{ 2 * 60 * 60 }}"
    poll: "{{ 15 }}"
    register: r_openshift_install

  always:
  - name: Gzip Install log
    archive:
      path: /home/{{ ansible_user }}/{{ cluster_name }}/.openshift_install.log
      dest: /home/{{ ansible_user }}/{{ cluster_name }}/.openshift_install.log.gz
      format: gz

- name: Make sure .kube directory exists for {{ ansible_user }}
  file:
    state: directory
    path: /home/{{ ansible_user }}/.kube
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: 0700

- name: Copy cluster kubeconfig to /home/{{ ansible_user }}/.kube/config
  copy:
    remote_src: true
    src: "/home/{{ ansible_user }}/{{ cluster_name }}/auth/kubeconfig"
    dest: "/home/{{ ansible_user }}/.kube/config"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: 0600

- name: Set Console URL
  set_fact:
    openshift_console_url: https://console-openshift-console.apps.{{ cluster_name }}.{{ ocp4_base_domain }}

- name: Set Console API
  set_fact:
    openshift_console_api: https://api.{{ cluster_name }}.{{ ocp4_base_domain }}:6443

- name: Retrive kubeadmin password
  command: cat /home/{{ ansible_user }}/{{ cluster_name }}/auth/kubeadmin-password
  register: r_kubeadmin_password
